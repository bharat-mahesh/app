type Milk @model @auth(rules: [{ allow: public }]){
id:ID!
image:String!
farmName: String!
itemName: String!
price: Int!
minNoOfItemPurchase:Int!
availableQuantity:Int!
rating: Int
}

type Butter @model @auth(rules: [{ allow: public }]){
id:ID!
image:String!
farmName: String!
itemName: String!
price: Int!
minNoOfItemPurchase:Int!
availableQuantity:Int!
rating: Int
}

type ButterMilk @model @auth(rules: [{ allow: public }]){
id:ID!
image:String!
farmName: String!
itemName: String!
price: Int!
minNoOfItemPurchase:Int!
availableQuantity:Int!
rating: Int
}
type Paneer @model @auth(rules: [{ allow: public }]){
id:ID!
image:String!
farmName: String!
itemName: String!
price: Int!
minNoOfItemPurchase:Int!
availableQuantity:Int!
rating: Int
}
type Cheese @model @auth(rules: [{ allow: public }]){
id:ID!
image:String!
farmName: String!
itemName: String!
price: Int!
minNoOfItemPurchase:Int!
availableQuantity:Int!
rating: Int
}
type MilkPowder @model @auth(rules: [{ allow: public }]){
id:ID!
image:String!
farmName: String!
itemName: String!
price: Int!
minNoOfItemPurchase:Int!
availableQuantity:Int!
rating: Int
}
type categories @model @auth(rules: [{ allow: public }]){
  id:ID!
  cardName:String!
  title:String!
  image:String!
}

type faqsData @model @auth(rules: [{ allow: public }]){
  sectionHeader:String!
 
}

type user @model @auth(rules: [{ allow: public }]){
  userName:String!
  email:String!
  authenticated:Boolean!
  deliveryLocation:String!  
  country:String!
  city:String!
  zipcode:Boolean!
  totalNoOfItems:Int!
  totalNoOfOrdersMade:Int!
}

type cart @model @auth(rules: [{ allow: public }]){
  id:ID!
  image:String!
  farmName:String!
  itemname:String!  
  minNoOfItemPurchase:Int!
  price:Int!
  orderCount:Int!
  totalPice:Int!
}

type payDetails @model @auth(rules: [{ allow: public }]){
  mrp_total:Float!
  prod_discount:Float!
  tot_amount:Float!
}

type orderData @model @auth(rules: [{ allow: public }]){
  order_number:Int!
  order_status:Int!
 
  tot_ordered_items:Int!
  tot_amnt:Float!
  farm_name:String!
  
}

# # This "input" configures a global authorization rule to enable public access to
# # all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# type Blog @model {
#   id: ID!
#   name: String!
#   posts: [Post] @hasMany
# }

# type Post @model {
#   id: ID!
#   title: String!
#   blog: Blog @belongsTo
#   comments: [Comment] @hasMany
# }

# type Comment @model {
#   id: ID!
#   post: Post @belongsTo
#   content: String!
# }
